Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#Now we can run the greedy workflow!
if __name__ == "__main__":
    greedy_work_dir = os.getcwd() + '/greedy_example/'
    tolerance = 1.e-6 #tolerance on greedy algorithm
    testing_sample_size = 10 #sample size on which to evaluate greedy ROM
    romtools.workflows.greedy.run_greedy(myFom,myRomModelBuilder,myParameterSpace,greedy_work_dir,
    	tolerance,testing_sample_size)

------------------

----- stdout -----
Greedy iteration # 0
----- stderr -----
/home/runner/work/rom-tools-and-workflows-demos/rom-tools-and-workflows-demos/rom-tools-and-workflows/romtools/workflows/greedy/run_greedy.py:235: RuntimeWarning: invalid value encountered in scalar divide
  qoi_error = np.linalg.norm(rom_qoi - fom_qoi) / np.linalg.norm(fom_qoi)
----- stdout -----
Greedy iteration # 1
----- stdout -----
Greedy iteration # 2
----- stdout -----
Greedy iteration # 3
----- stdout -----
Greedy iteration # 4
----- stdout -----
Greedy iteration # 5
----- stdout -----
Greedy iteration # 6
----- stdout -----
Greedy iteration # 7
----- stdout -----
Greedy iteration # 8
----- stdout -----
Greedy iteration # 9
----- stdout -----
Greedy iteration # 10
----- stderr -----
Traceback (most recent call last):
  File "/home/runner/work/rom-tools-and-workflows-demos/rom-tools-and-workflows-demos/docs/source/notebooks/adr_1d//adr_1d_rom.py", line 32, in <module>
    u = adr_problem.solve(params[0],params[1])
  File "/home/runner/work/rom-tools-and-workflows-demos/rom-tools-and-workflows-demos/docs/source/notebooks/adr_1d//adr_1d_rom.py", line 22, in solve
    solution = np.linalg.solve(self.A_r_,self.f_r_)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/numpy/linalg/_linalg.py", line 410, in solve
    r = gufunc(a, b, signature=signature)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/numpy/linalg/_linalg.py", line 104, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")
numpy.linalg.LinAlgError: Singular matrix
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[4], line 6[0m
[1;32m      4[0m tolerance [38;5;241m=[39m [38;5;241m1.e-6[39m [38;5;66;03m#tolerance on greedy algorithm[39;00m
[1;32m      5[0m testing_sample_size [38;5;241m=[39m [38;5;241m10[39m [38;5;66;03m#sample size on which to evaluate greedy ROM[39;00m
[0;32m----> 6[0m [43mromtools[49m[38;5;241;43m.[39;49m[43mworkflows[49m[38;5;241;43m.[39;49m[43mgreedy[49m[38;5;241;43m.[39;49m[43mrun_greedy[49m[43m([49m[43mmyFom[49m[43m,[49m[43mmyRomModelBuilder[49m[43m,[49m[43mmyParameterSpace[49m[43m,[49m[43mgreedy_work_dir[49m[43m,[49m
[1;32m      7[0m [43m	[49m[43mtolerance[49m[43m,[49m[43mtesting_sample_size[49m[43m)[49m

File [0;32m~/work/rom-tools-and-workflows-demos/rom-tools-and-workflows-demos/rom-tools-and-workflows/romtools/workflows/greedy/run_greedy.py:192[0m, in [0;36mrun_greedy[0;34m(fom_model, rom_model_builder, parameter_space, absolute_greedy_work_directory, tolerance, testing_sample_size, random_seed)[0m
[1;32m    190[0m     rom_model[38;5;241m.[39mpopulate_run_directory(rom_run_directory,parameter_dict)
[1;32m    191[0m     rom_model[38;5;241m.[39mrun_model(rom_run_directory,parameter_dict)
[0;32m--> 192[0m     error_indicators[counter] [38;5;241m=[39m [43mrom_model[49m[38;5;241;43m.[39;49m[43mcompute_error_estimate[49m[43m([49m[43mrom_run_directory[49m[43m,[49m[43mparameter_dict[49m[43m)[49m
[1;32m    194[0m rom_time [38;5;241m+[39m[38;5;241m=[39m time[38;5;241m.[39mtime() [38;5;241m-[39m t0
[1;32m    196[0m sample_with_highest_error_indicator [38;5;241m=[39m samples_left[la[38;5;241m.[39margmax(error_indicators)]

Cell [0;32mIn[3], line 23[0m, in [0;36madrQoiRomWithErrorEstimate.compute_error_estimate[0;34m(self, run_directory, parameter_sample)[0m
[1;32m     21[0m [38;5;28;01mdef[39;00m [38;5;21mcompute_error_estimate[39m([38;5;28mself[39m, run_directory: [38;5;28mstr[39m, parameter_sample: [38;5;28mdict[39m):
[1;32m     22[0m     rom_data [38;5;241m=[39m np[38;5;241m.[39mload([38;5;28mself[39m[38;5;241m.[39moffline_directory_ [38;5;241m+[39m [38;5;124m'[39m[38;5;124m/rom_data.npz[39m[38;5;124m'[39m)
[0;32m---> 23[0m     solution [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43mrun_directory[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43m/solution.npz[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     24[0m     u [38;5;241m=[39m solution[[38;5;124m'[39m[38;5;124mu[39m[38;5;124m'[39m]
[1;32m     25[0m     residual [38;5;241m=[39m (parameter_sample[[38;5;124m'[39m[38;5;124mc[39m[38;5;124m'[39m][38;5;241m*[39mrom_data[[38;5;124m'[39m[38;5;124mAc[39m[38;5;124m'[39m] [38;5;241m-[39m parameter_sample[[38;5;124m'[39m[38;5;124mnu[39m[38;5;124m'[39m][38;5;241m*[39mrom_data[[38;5;124m'[39m[38;5;124mAd[39m[38;5;124m'[39m])[38;5;129m@u[39m [38;5;241m-[39m rom_data[[38;5;124m'[39m[38;5;124mf[39m[38;5;124m'[39m]

File [0;32m/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/numpy/lib/_npyio_impl.py:455[0m, in [0;36mload[0;34m(file, mmap_mode, allow_pickle, fix_imports, encoding, max_header_size)[0m
[1;32m    453[0m     own_fid [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[1;32m    454[0m [38;5;28;01melse[39;00m:
[0;32m--> 455[0m     fid [38;5;241m=[39m stack[38;5;241m.[39menter_context([38;5;28;43mopen[39;49m[43m([49m[43mos[49m[38;5;241;43m.[39;49m[43mfspath[49m[43m([49m[43mfile[49m[43m)[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m)[49m)
[1;32m    456[0m     own_fid [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m    458[0m [38;5;66;03m# Code to distinguish from NumPy binary files and pickles.[39;00m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/home/runner/work/rom-tools-and-workflows-demos/rom-tools-and-workflows-demos/docs/source/notebooks/greedy_example//rom_iteration_10/run_18/solution.npz'

