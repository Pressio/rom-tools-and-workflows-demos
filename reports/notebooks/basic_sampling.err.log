Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#Now, we can run a sampling algorithm (https://pressio.github.io/rom-tools-and-workflows/romtools/workflows/sampling/sampling.html)
if __name__ == "__main__":
    # As a starting point, we will use the model for the advection diffusion equation created in the external_model tutorial
    from ipynb.fs.full.external_model import adrExternalRomToolsModel
    myModel = adrExternalRomToolsModel()

    # We will use the parameter space created in the parameter space tutorial
    from ipynb.fs.full.parameter_space import BasicParameterSpace
    myParameterSpace = BasicParameterSpace()

    #The sampling algorithm requires a directory argument of where to put all the generated samples, files, etc.
    work_directory = os.getcwd() + '/sampling_tutorial/'
    
    #Now we can run the sampling algorithm.
    
    sample_directories = sampling.run_sampling(
    	model = myModel,
    	parameter_space = myParameterSpace,
    	absolute_sampling_directory=work_directory,
        number_of_samples = 5)
#The sample_directories returned by the algorithm contains all the directories that samples were run in:
# work_directory/run_0
# work_directory/run_1
# ...
# work_directory/run_4
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[2], line 4[0m
[1;32m      1[0m [38;5;66;03m#Now, we can run a sampling algorithm (https://pressio.github.io/rom-tools-and-workflows/romtools/workflows/sampling/sampling.html)[39;00m
[1;32m      2[0m [38;5;28;01mif[39;00m [38;5;18m__name__[39m [38;5;241m==[39m [38;5;124m"[39m[38;5;124m__main__[39m[38;5;124m"[39m:
[1;32m      3[0m     [38;5;66;03m# As a starting point, we will use the model for the advection diffusion equation created in the external_model tutorial[39;00m
[0;32m----> 4[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mipynb[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfs[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfull[39;00m[38;5;21;01m.[39;00m[38;5;21;01mexternal_model[39;00m [38;5;28;01mimport[39;00m adrExternalRomToolsModel
[1;32m      5[0m     myModel [38;5;241m=[39m adrExternalRomToolsModel()
[1;32m      7[0m     [38;5;66;03m# We will use the parameter space created in the parameter space tutorial[39;00m

[0;31mModuleNotFoundError[0m: No module named 'ipynb'

